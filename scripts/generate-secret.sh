#!/bin/bash

# 🔐 Generate Secure METRICS_SECRET Script
# This script generates a secure METRICS_SECRET and updates the .env file

set -e

echo "🔐 Generating Secure METRICS_SECRET..."
echo ""

# Check if .env file exists
if [ ! -f .env ]; then
    echo "❌ No .env file found!"
    echo "   Please run: cp .env.example .env"
    echo "   Then run this script again."
    exit 1
fi

# Generate secure secret
echo "🎲 Generating secure secret..."
SECRET=$(openssl rand -base64 32)

# Update .env file
echo "📝 Updating .env file..."
if grep -q "METRICS_SECRET=" .env; then
    # Replace existing METRICS_SECRET (escape special characters)
    ESCAPED_SECRET=$(echo "$SECRET" | sed 's/[[\.*^$()+?{|]/\\&/g')
    sed -i '' "s/METRICS_SECRET=.*/METRICS_SECRET=$ESCAPED_SECRET/" .env
    echo "✅ Updated existing METRICS_SECRET"
else
    # Add new METRICS_SECRET
    echo "" >> .env
    echo "# 🔐 Metrics Authentication Secret (generated by script)" >> .env
    echo "METRICS_SECRET=$SECRET" >> .env
    echo "✅ Added new METRICS_SECRET"
fi

echo ""
echo "🎉 METRICS_SECRET generated and configured!"
echo ""
echo "📋 Generated secret: $SECRET"
echo ""
echo "🔍 Validating configuration..."
if ./scripts/validate.sh; then
    echo ""
    echo "✅ Configuration is valid and ready to use!"
    echo "   You can now start the services with: docker compose up -d"
else
    echo ""
    echo "❌ Validation failed. Please check your .env file."
    exit 1
fi
